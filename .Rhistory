geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)
p
}
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="grey")
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3, color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(-5, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)
p
}
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="grey")
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3, color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)
p
}
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="grey")
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3, color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(-0.5, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)
p
}
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="grey")
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3, color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)+ geom_line(color=color)
p
}
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="grey")
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="red")
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="grey")
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="darkgrey")
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3,annotations=annotations color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)+ geom_line(color=color)
p
}
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3,annotations=annotations, color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)+ geom_line(color=color)
p
}
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="darkgrey")
annotations
Plot_CC_distribution<-function(db=NULL, span=3,freqY=2, freqX=2, addY=5, addX=0,sizeT=3,annotations=annotations, color="black"){
counts<-na.omit(as.numeric(unlist(lapply(seq_along(db), function(x) strsplit(as.character(db[x]),',')))))
cond<-as.data.frame(table(counts))
##Need to fill missing numbers with 0
expected<-seq(1,max(as.numeric(as.character(cond$counts))))
"%!in%" = Negate("%in%")
missing<-cbind.data.frame(expected[which(expected %!in% as.character(cond$counts))],0)
names(missing)<-c("counts", "Freq"  )
names(cond)
cond<-rbind(missing,cond)
custom_breaksx <- seq(0, max(as.numeric(cond$counts)), freqX)
custom_breaksy <- seq(0, c(max(as.numeric(as.character(cond$Freq)))), freqY)
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE){
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
p<-ggplot(cond, aes(x = as.numeric(counts), y = Freq, group = 1)) + geom_line(color=color) +
#stat_peaks(colour = "black") +
#stat_peaks(geom = "text", colour = "black", vjust = -0.5,span = span)+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_x_continuous(breaks = custom_breaksx,
labels = every_nth(custom_breaksx, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(as.character(cond$counts)))+addX)) +
scale_y_continuous(breaks = custom_breaksy,
labels = every_nth(custom_breaksy, 4, inverse = TRUE),
expand = c(0, 0), limits = c(0,max(as.numeric(cond$Freq))+addY))+
labs(title="",  x ="Haploid Chromosome #", y = "Number of species") +
theme(text=element_text(size=13,  family="Times New Roman"))+
geom_text(data=annotations,aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText),  size=sizeT)+ geom_line(color=color)
p
}
annotations
Plot_CC_distribution(counts$counts,
span=3, freqY = 60, freqX = 5, addX=0, addY=0, sizeT=2, color="darkgrey",annotations=annotations)
table<-read.csv("ACCDBJun27.csv")
phylum<-c( 'Acoela',
'Arthropoda',
'Brachiopoda',
'Bryozoa',
'Chaetognatha',
'Chordata',
'Cnidaria',
'Ctenophora',
'Echinodermata',
'Entoprocta',
'Gastrotricha',
'Gnathostomulida',
'Hemichordata',
'Kinorhyncha',
'Mollusca',
'Nematoda',
'Nematomorpha',
'Nemertea',
'Onychophora',
'Phoronida',
'Placozoa',
'Platyhelminthes',
'Porifera',
'Rotifera',
'Sipuncula',
'Tardigrada',
'Xenoturbellida')
phylum_richness<-c(
140,
1302809,
392,
6008,
170,
85423,
10203,
187,
7550,
171,
794,
97,
103,
196,
84977,
25033,
339,
1358,
183,
16,
1,
29487,
8659,
2049,
205,
1167,
2)
CCounts_phylum<- unlist(lapply(seq_along(phylum), function(x){
dim(table[na.omit(table$phylum == phylum[x]),])[1]
}))
df <- data.frame(
"Phylum" = phylum,
"Total richness" = phylum_richness,
'Species in ACC' = CCounts_phylum,
'Richness in ACC (%)' = round(CCounts_phylum/phylum_richness,3)*100,
"Curated" = c(F,T,F,T,T,T,T,F,T,T,F,F,F,F,T,T,T,T,F,T,F,T,T,T,T,F,F) ,
stringsAsFactors = FALSE
)
write.csv(df, "summary.release.Jun27.csv", row.names = F)
setwd("~/MEGA/Projects/2_Chromosomal_Counts_Animals/Website_ACC_Macbook/ACC/_posts")
table<-read.csv("ACCDBJun27.csv")
phylum<-c( 'Acoela',
'Arthropoda',
'Brachiopoda',
'Bryozoa',
'Chaetognatha',
'Chordata',
'Cnidaria',
'Ctenophora',
'Echinodermata',
'Entoprocta',
'Gastrotricha',
'Gnathostomulida',
'Hemichordata',
'Kinorhyncha',
'Mollusca',
'Nematoda',
'Nematomorpha',
'Nemertea',
'Onychophora',
'Phoronida',
'Placozoa',
'Platyhelminthes',
'Porifera',
'Rotifera',
'Sipuncula',
'Tardigrada',
'Xenoturbellida')
phylum_richness<-c(
140,
1302809,
392,
6008,
170,
85423,
10203,
187,
7550,
171,
794,
97,
103,
196,
84977,
25033,
339,
1358,
183,
16,
1,
29487,
8659,
2049,
205,
1167,
2)
CCounts_phylum<- unlist(lapply(seq_along(phylum), function(x){
dim(table[na.omit(table$phylum == phylum[x]),])[1]
}))
df <- data.frame(
"Phylum" = phylum,
"Total richness" = phylum_richness,
'Species in ACC' = CCounts_phylum,
'Richness in ACC (%)' = round(CCounts_phylum/phylum_richness,3)*100,
"Curated" = c(F,T,F,T,T,T,T,F,T,T,F,F,F,F,T,T,T,T,F,T,F,T,T,T,T,F,F) ,
stringsAsFactors = FALSE
)
write.csv(df, "summary.release.Jun27.csv", row.names = F)
ACCDBJun27 <- read.csv("~/MEGA/Projects/2_Chromosomal_Counts_Animals/Website_ACC_Macbook/ACC/category/ACCDBJun27.csv")
View(ACCDBJun27)
ACCDBJun27[ ACCDBJun27$Species_corrected == "Xenopus_ruwenzoriensis" ,]
ACCDBJun27[ ACCDBJun27$Species_corrected == "Xenopus_ruwenzoriensis", c("ploidy_2N", "ploidy_N", "curated_roundup_N", "curated_rounddown_N")]
a<-ACCDBJun27[ ACCDBJun27$Species_corrected == "Xenopus_ruwenzoriensis", c("ploidy_2N", "ploidy_N", "curated_roundup_N", "curated_rounddown_N")]
ACCDBJun27[ ACCDBJun27$Species_corrected == "Xenopus_ruwenzoriensis", c("ploidy_2N", "ploidy_N", "curated_roundup_N", "curated_rounddown_N")]<-c(NA,108,108,108)
View(ACCDBJun27)
